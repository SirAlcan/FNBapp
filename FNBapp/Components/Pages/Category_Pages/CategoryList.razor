@page "/category"
@inject ICategoryRepository _CategoryRepository
@inject IJSRuntime _JS

<FNBapp.Components.Shared.BsModal Title="Delete Confirmation"
                                  ConfirmText="Delete"
                                  CancelText="Cancel"
                                  OnModalConfirmation="ConfirmDelete_Click">
    <p>Are you sure you want to delete this category?</p>
    <p>This action cannot be undone.</p>
</FNBapp.Components.Shared.BsModal>

@if (IsProcessing)
{
    <div class="position-absolute w-75 h-75 d-flex flex-column align-items-center bg-white justify-content-center">
        <p>Loading...<BitEllipsisLoading /></p>
    </div>
}
else
{
    <div class="container py-4">
        <div class="card shadow border-0 rounded-3">
            <div class="card-header bg-dark bg-gradient py-3">
                <div class="row">
                    <div class="col-12 text-center">
                        <h2 class="text-white py-2">Category Management</h2>
                    </div>
                </div>
            </div>
            <div class="card-body p-4">
                <div class="row mb-4">
                    <div class="col-12 text-end">
                        <a href="/category/create" class="btn btn-primary">
                            <i class="bi bi-plus-circle me-2"></i>Add New Category
                        </a>
                    </div>
                </div>
                @if (Categories.Any())
                {
                    <div class="table-responsive">
                        <table class="table table-bordered table-hover">
                            <thead class="table-light">
                                <tr>
                                    <th>Name</th>
                                    <th class="text-center" style="width: 220px">Actions</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var obj in Categories)
                                {
                                    <tr>
                                        <td class="align-middle">@obj.Name</td>
                                        <td class="text-center">
                                            <a href="@($"category/update/{obj.Id}")" class="btn btn-sm btn-primary me-2">
                                                <i class="bi bi-pencil-square me-1"></i>Edit
                                            </a>
                                            <button class="btn btn-sm btn-danger" @onclick="() => HandleDelete(obj.Id)">
                                                <i class="bi bi-trash3 me-1"></i>Delete
                                            </button>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                }
                else
                {
                    <div class="text-center py-4">
                        <p class="mb-0">No categories found. Create your first category by clicking the "Add New Category" button.</p>
                    </div>
                }
            </div>
        </div>
    </div>
}

@code {
    private bool IsProcessing { get; set; } = true;
    private IEnumerable<Category> Categories { get; set; } = new List<Category>();
    private int DeleteCategoryID { get; set; } = 0;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await LoadCategories();
            IsProcessing = false;
            StateHasChanged();
        }
    }

    private async Task LoadCategories()
    {
        Categories = await _CategoryRepository.GetAllAsync();
    }

    private async Task HandleDelete(int id)
    {
        DeleteCategoryID = id;
        await _JS.InvokeVoidAsync("ShowConfirmationModal");
    }

    private async Task ConfirmDelete_Click(bool isConfirm)
    {
        await _JS.InvokeVoidAsync("HideConfirmationModal");

        if (isConfirm && DeleteCategoryID != 0)
        {
            IsProcessing = true;
            StateHasChanged();

            var result = await _CategoryRepository.DeleteAsync(DeleteCategoryID);

            if (result)
                await _JS.ToastrSuccess("Category deleted successfully");
            else
                await _JS.ToastrError("Error encountered while deleting");

            await LoadCategories();
            DeleteCategoryID = 0;
            IsProcessing = false;
            StateHasChanged();
        }
    }
}